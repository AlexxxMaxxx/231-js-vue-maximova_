{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\"\\n\\t\\t\\t<div class=\\\"text-field\\\">\\n\\t\\t\\t<label v-show=\\\"isLabel\\\" class=\\\"text-field__label label\\\" for=\\\"text\\\"\\n\\t\\t\\t><slot></slot\\n\\t\\t></label>\"), _createVNode(_component_v_text_field, {\n    clearable: \"\",\n    label: \"Label\",\n    variant: \"outlined\",\n    value: $props.modelValue,\n    onInput: $options.updateInput,\n    class: \"text-field__input input\",\n    name: \"text\"\n  }, null, 8 /* PROPS */, [\"value\", \"onInput\"]), _createCommentVNode(\"<v-text-field :rules=\\\"rules\\\"></v-text-field>\\n\\t\\t\\n\\t</div>\")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["_createCommentVNode","_createVNode","_component_v_text_field","clearable","label","variant","value","$props","modelValue","onInput","$options","updateInput","class","name"],"sources":["/Users/anastasiia_maxim/Desktop/split_bill/src/components/UI/AppInput.vue"],"sourcesContent":["<template>\n\t\t<!--\n\t\t\t<div class=\"text-field\">\n\t\t\t<label v-show=\"isLabel\" class=\"text-field__label label\" for=\"text\"\n\t\t\t><slot></slot\n\t\t></label>-->\n\t\t<v-text-field \n\t\t\tclearable \n\t\t\tlabel=\"Label\" \n\t\t\tvariant=\"outlined\"\n\t\t\t:value=\"modelValue\"\n\t\t\t@input=\"updateInput\"\n\t\t\tclass=\"text-field__input input\"\n\t\t\tname=\"text\"/>\n\n\t  <!--<v-text-field :rules=\"rules\"></v-text-field>\n\t\t\n\t</div>-->\n</template>\n\n<script>\nexport default {\n\tname: 'app-input',\n\tprops: {\n\t\tmodelValue: [String, Number],\n\t\tisLabel: Boolean,\n\t},\n\tmethods: {\n\t\tupdateInput(event) {\n\t\t\tthis.$emit('update:modelValue', event.target.value)\n\t\t},\n\t},\n}\n</script>\n"],"mappings":";;;6DACEA,mBAAA,0JAIY,EACZC,YAAA,CAOcC,uBAAA;IANbC,SAAS,EAAT,EAAS;IACTC,KAAK,EAAC,OAAO;IACbC,OAAO,EAAC,UAAU;IACjBC,KAAK,EAAEC,MAAA,CAAAC,UAAU;IACjBC,OAAK,EAAEC,QAAA,CAAAC,WAAW;IACnBC,KAAK,EAAC,yBAAyB;IAC/BC,IAAI,EAAC;iDAELb,mBAAA,kEAEO,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}