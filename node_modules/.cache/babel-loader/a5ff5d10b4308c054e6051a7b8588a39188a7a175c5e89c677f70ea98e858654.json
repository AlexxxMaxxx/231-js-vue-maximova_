{"ast":null,"code":"import { useVuelidate } from '@vuelidate/core';\nimport { required, minLength } from '@vuelidate/validators';\nexport default {\n  props: {\n    persons: {\n      type: Array,\n      required: true\n    }\n  },\n  setup() {\n    return {\n      v$: useVuelidate()\n    };\n  },\n  data: () => ({\n    name: '',\n    buttonContent: 'Добавить',\n    hasError: false\n  }),\n  validations() {\n    return {\n      name: {\n        required,\n        minLength: minLength(3)\n      }\n    };\n  },\n  methods: {\n    inputValidation() {\n      this.v$.$touch();\n      if (!this.v$.$error) {\n        if (!this.persons.find(p => p.name === this.name)) {\n          this.hasError = false;\n          this.buttonContent = 'Добавить';\n          this.addPerson();\n        } else {\n          this.hasError = true;\n          this.buttonContent = 'Это имя уже используется!';\n        }\n      } else if (this.v$.name.$dirty) {\n        this.hasError = true;\n        if (this.v$.name.required.$invalid) {\n          this.buttonContent = 'Обязательное поле!';\n        } else if (this.v$.name.minLength.$invalid) {\n          this.buttonContent = 'Слишком короткое имя!';\n        }\n      }\n    },\n    addPerson() {\n      this.$emit('add', {\n        id: Date.now(),\n        name: this.name.charAt(0).toUpperCase() + this.name.toLowerCase().slice(1),\n        debts: []\n      });\n      this.name = '';\n    }\n  }\n};","map":{"version":3,"names":["useVuelidate","required","minLength","props","persons","type","Array","setup","v$","data","name","buttonContent","hasError","validations","methods","inputValidation","$touch","$error","find","p","addPerson","$dirty","$invalid","$emit","id","Date","now","charAt","toUpperCase","toLowerCase","slice","debts"],"sources":["/Users/anastasiia_maxim/Desktop/split_bill/src/components/PersonForm.vue"],"sourcesContent":["<template>\n\t<form class=\"person-form\" @submit.prevent>\n\t\t<app-input\n\t\t\tclass=\"person-form__input input\"\n\t\t\t:class=\"{ invalid: hasError }\"\n\t\t\t:isLabel=\"false\"\n\t\t\tv-model.trim=\"name\"\n\t\t\ttype=\"text\"\n\t\t\tlabel=\"Имя\" \n\t\t/>\n\t\t<app-button\n\t\t\tclass=\"person-form__add-btn add-btn\"\n\t\t\t:class=\"{ disabled: hasError }\"\n\t\t\t@click=\"inputValidation\"\n\t\t\t>{{ buttonContent }}</app-button\n\t\t>\n\t</form>\n</template>\n\n<script>\nimport { useVuelidate } from '@vuelidate/core'\nimport { required, minLength } from '@vuelidate/validators'\n\nexport default {\n\tprops: {\n\t\tpersons: {\n\t\t\ttype: Array,\n\t\t\trequired: true,\n\t\t},\n\t},\n\tsetup() {\n\t\treturn { v$: useVuelidate() }\n\t},\n\tdata: () => ({\n\t\tname: '',\n\t\tbuttonContent: 'Добавить',\n\t\thasError: false,\n\t}),\n\tvalidations() {\n\t\treturn {\n\t\t\tname: {\n\t\t\t\trequired,\n\t\t\t\tminLength: minLength(3),\n\t\t\t},\n\t\t}\n\t},\n\tmethods: {\n\t\tinputValidation() {\n\t\t\tthis.v$.$touch()\n\t\t\tif (!this.v$.$error) {\n\t\t\t\tif (!this.persons.find(p => p.name === this.name)) {\n\t\t\t\t\tthis.hasError = false\n\t\t\t\t\tthis.buttonContent = 'Добавить'\n\t\t\t\t\tthis.addPerson()\n\t\t\t\t} else {\n\t\t\t\t\tthis.hasError = true\n\t\t\t\t\tthis.buttonContent = 'Это имя уже используется!'\n\t\t\t\t}\n\t\t\t} else if (this.v$.name.$dirty) {\n\t\t\t\tthis.hasError = true\n\t\t\t\tif (this.v$.name.required.$invalid) {\n\t\t\t\t\tthis.buttonContent = 'Обязательное поле!'\n\t\t\t\t} else if (this.v$.name.minLength.$invalid) {\n\t\t\t\t\tthis.buttonContent = 'Слишком короткое имя!'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\taddPerson() {\n\t\t\tthis.$emit('add', {\n\t\t\t\tid: Date.now(),\n\t\t\t\tname:\n\t\t\t\t\tthis.name.charAt(0).toUpperCase() + this.name.toLowerCase().slice(1),\n\t\t\t\tdebts: [],\n\t\t\t})\n\t\t\tthis.name = ''\n\t\t},\n\t},\n}\n</script>\n"],"mappings":"AAoBA,SAASA,YAAW,QAAS,iBAAgB;AAC7C,SAASC,QAAQ,EAAEC,SAAQ,QAAS,uBAAsB;AAE1D,eAAe;EACdC,KAAK,EAAE;IACNC,OAAO,EAAE;MACRC,IAAI,EAAEC,KAAK;MACXL,QAAQ,EAAE;IACX;EACD,CAAC;EACDM,KAAKA,CAAA,EAAG;IACP,OAAO;MAAEC,EAAE,EAAER,YAAY,CAAC;IAAE;EAC7B,CAAC;EACDS,IAAI,EAAEA,CAAA,MAAO;IACZC,IAAI,EAAE,EAAE;IACRC,aAAa,EAAE,UAAU;IACzBC,QAAQ,EAAE;EACX,CAAC,CAAC;EACFC,WAAWA,CAAA,EAAG;IACb,OAAO;MACNH,IAAI,EAAE;QACLT,QAAQ;QACRC,SAAS,EAAEA,SAAS,CAAC,CAAC;MACvB;IACD;EACD,CAAC;EACDY,OAAO,EAAE;IACRC,eAAeA,CAAA,EAAG;MACjB,IAAI,CAACP,EAAE,CAACQ,MAAM,CAAC;MACf,IAAI,CAAC,IAAI,CAACR,EAAE,CAACS,MAAM,EAAE;QACpB,IAAI,CAAC,IAAI,CAACb,OAAO,CAACc,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACT,IAAG,KAAM,IAAI,CAACA,IAAI,CAAC,EAAE;UAClD,IAAI,CAACE,QAAO,GAAI,KAAI;UACpB,IAAI,CAACD,aAAY,GAAI,UAAS;UAC9B,IAAI,CAACS,SAAS,CAAC;QAChB,OAAO;UACN,IAAI,CAACR,QAAO,GAAI,IAAG;UACnB,IAAI,CAACD,aAAY,GAAI,2BAA0B;QAChD;MACD,OAAO,IAAI,IAAI,CAACH,EAAE,CAACE,IAAI,CAACW,MAAM,EAAE;QAC/B,IAAI,CAACT,QAAO,GAAI,IAAG;QACnB,IAAI,IAAI,CAACJ,EAAE,CAACE,IAAI,CAACT,QAAQ,CAACqB,QAAQ,EAAE;UACnC,IAAI,CAACX,aAAY,GAAI,oBAAmB;QACzC,OAAO,IAAI,IAAI,CAACH,EAAE,CAACE,IAAI,CAACR,SAAS,CAACoB,QAAQ,EAAE;UAC3C,IAAI,CAACX,aAAY,GAAI,uBAAsB;QAC5C;MACD;IACD,CAAC;IACDS,SAASA,CAAA,EAAG;MACX,IAAI,CAACG,KAAK,CAAC,KAAK,EAAE;QACjBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACdhB,IAAI,EACH,IAAI,CAACA,IAAI,CAACiB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,IAAI,IAAI,CAAClB,IAAI,CAACmB,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;QACrEC,KAAK,EAAE;MACR,CAAC;MACD,IAAI,CAACrB,IAAG,GAAI,EAAC;IACd;EACD;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}