{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport const personModule = {\n  state: () => ({\n    persons: [{\n      id: 1,\n      name: 'Настя',\n      debts: []\n    }, {\n      id: 2,\n      name: 'Вероника',\n      debts: []\n    }, {\n      id: 3,\n      name: 'Вика',\n      debts: []\n    }, {\n      id: 4,\n      name: 'Саша',\n      debts: []\n    }, {\n      id: 5,\n      name: 'Кодя',\n      debts: []\n    }]\n  }),\n  getters: {\n    getPersons(state) {\n      return state.persons;\n    },\n    getPersonsLength(_, getters) {\n      return getters.getPersons.length;\n    }\n  },\n  mutations: {\n    setPersons(state, persons) {\n      // удалить?\n      state.persons = persons;\n    },\n    addPerson(state, newPerson) {\n      state.persons.push(newPerson);\n    },\n    removePerson(state, person) {\n      state.persons = state.persons.filter(p => p.id !== person.id);\n    }\n  },\n  namespaced: true\n};","map":{"version":3,"names":["personModule","state","persons","id","name","debts","getters","getPersons","getPersonsLength","_","length","mutations","setPersons","addPerson","newPerson","push","removePerson","person","filter","p","namespaced"],"sources":["/home/amaksimova/Desktop/split_bill/src/store/modules/personModule.js"],"sourcesContent":["export const personModule = {\n\tstate: () => ({\n\t\tpersons: [\n\t\t\t{\n\t\t\t\tid: 1,\n\t\t\t\tname: 'Настя',\n\t\t\t\tdebts: [],\n\t\t\t},\n\t\t\t{ id: 2, name: 'Вероника', debts: [] },\n\t\t\t{ id: 3, name: 'Вика', debts: [] },\n\t\t\t{ id: 4, name: 'Саша', debts: [] },\n\t\t\t{ id: 5, name: 'Кодя', debts: [] },\n\t\t],\n\t}),\n\tgetters: {\n\t\tgetPersons(state) {\n\t\t\treturn state.persons\n\t\t},\n\t\tgetPersonsLength(_, getters) {\n\t\t\treturn getters.getPersons.length\n\t\t},\n\t},\n\tmutations: {\n\t\tsetPersons(state, persons) {\n\t\t\t// удалить?\n\t\t\tstate.persons = persons\n\t\t},\n\t\taddPerson(state, newPerson) {\n\t\t\tstate.persons.push(newPerson)\n\t\t},\n\t\tremovePerson(state, person) {\n\t\t\tstate.persons = state.persons.filter(p => p.id !== person.id)\n\t\t},\n\t},\n\tnamespaced: true,\n}\n"],"mappings":";AAAA,OAAO,MAAMA,YAAY,GAAG;EAC3BC,KAAK,EAAEA,CAAA,MAAO;IACbC,OAAO,EAAE,CACR;MACCC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,OAAO;MACbC,KAAK,EAAE;IACR,CAAC,EACD;MAAEF,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,UAAU;MAAEC,KAAK,EAAE;IAAG,CAAC,EACtC;MAAEF,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAG,CAAC,EAClC;MAAEF,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAG,CAAC,EAClC;MAAEF,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAG,CAAC;EAEpC,CAAC,CAAC;EACFC,OAAO,EAAE;IACRC,UAAUA,CAACN,KAAK,EAAE;MACjB,OAAOA,KAAK,CAACC,OAAO;IACrB,CAAC;IACDM,gBAAgBA,CAACC,CAAC,EAAEH,OAAO,EAAE;MAC5B,OAAOA,OAAO,CAACC,UAAU,CAACG,MAAM;IACjC;EACD,CAAC;EACDC,SAAS,EAAE;IACVC,UAAUA,CAACX,KAAK,EAAEC,OAAO,EAAE;MAC1B;MACAD,KAAK,CAACC,OAAO,GAAGA,OAAO;IACxB,CAAC;IACDW,SAASA,CAACZ,KAAK,EAAEa,SAAS,EAAE;MAC3Bb,KAAK,CAACC,OAAO,CAACa,IAAI,CAACD,SAAS,CAAC;IAC9B,CAAC;IACDE,YAAYA,CAACf,KAAK,EAAEgB,MAAM,EAAE;MAC3BhB,KAAK,CAACC,OAAO,GAAGD,KAAK,CAACC,OAAO,CAACgB,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAChB,EAAE,KAAKc,MAAM,CAACd,EAAE,CAAC;IAC9D;EACD,CAAC;EACDiB,UAAU,EAAE;AACb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}